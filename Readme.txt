Описание программно-аппаратной системы, состоящей из сервера и сети устройств.

В директории Proxy_Router имеется 3 файла: : proxy_startup.py, server_startup.py, device_startup.py 

Для запуска системы нужно проделать следующие шаги:

1) Запустить из командной строки файл proxy_startup.py:

	"python proxy_startup.py"
	
Прокси сервер, по умолчанию, запускается по ip адресу: "127.0.0.1" с номером порта "8889". Номер порта можно изменить в файле с настройками:
"/proxy/settings.conf"

2) Запустить из командной строки файл server_startup.py:

	"python server_startup.py (Версия сервера) (номер порта)"

Пример: "python server_startup.py Production 8888". Было принято решение дать возможность пользователю вводить название сервера.

Ниже приведена таблица соответствия прокси сервера, которая находится в директории "/proxy/table.xml". 
Целесообразно запускать сервера по содержащимся в таблице адресам, а устройства - c содержащимися в таблице id.
_____________________________________
     127.0.0.1:8888

     ID: 1
     ID: 2
     ID: 3
		
     127.0.0.1:8887

     ID: 4
     ID: 5
     ID: 6
     ID: 7
		
     127.0.0.1:8885

     ID: 8
     ID: 9
     ID: 10
     ID: 11
     ID: 12
_____________________________________

Так же, согласно заданию, имеется возможность запуска сервера с номером порта: 8886, на который будут приходить запросы устройств, 
id которых не присутствуют в таблице. Адрес этого сервера указан в конфигурационном файлt: "/proxy/config.ini"
Есть возможность установить время задержки ответа на запрос. Это можно сделать, так же, в "/server/config.ini"
Серверы, по умолчанию, запускаются по адресу "127.0.0.1". Не следует запускать сервер с номером порта "8889".


3) Запустить из командной строки файл device__startup.py:

	"python device_startup.py 127.0.0.1 8889 (id устройства)"
Пример: "python device_startup.py 127.0.0.1 8889 7"

После запуска устройство начнёт посылать запросы на прокси сервер. 

При отсылке не валидных запросов и получении соответствующего уведомления об ошибке - устройство прекратит свою работу, соглассно рекомендациям. Его следует перезапустить с корректно формируемой структурой запроса. 

Согласно заданию, устройство должно посылать запрос раз в 5 минут. Для наглядности работы системы, временной промежуток был уменьшен до нескольких секунд. Его можно изменить в конфигурационном файле: "/device/config.ini".

ВНИМАНИЕ: Возможна установка времени задержки ответа на запрос большего, чем тайминг отправки запросов(к примеру, для моделирования высокой загруженности канала/сервера)

Так же, в "/device/config.ini" можно установить таймаут для запросов.

В процессе работы системы будут формироваться и заполняться log-файлы. 

- Для устройств это будут: "/device/(id устройства)_Device.log".
- Для прокси это будет: "/proxy/Info_Proxy.log".
- Для серверов это будут: "/server/(номер порта)_Server.log"

Для успешной работы требуется Python 3.6

Для установки зависимостей следует, воспользоваться файлом requirements.txt. Имеется возможность установки зависимостей как из сети интернета. Пример: 
"pip install -r requirements.txt"

так и из каталога. Пример: 
"pip install --no-index -f wheels/ -r requirements.txt"

Библиотеки и модули, которых не было в базовой комплектации,  были установлены при помощи pip 9.0.1

Author: Ибрагимов Р.М.
mail:   ibragimow.it@gmail.com
phone   89372748568	
